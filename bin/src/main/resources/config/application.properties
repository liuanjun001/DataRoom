#json validtor interceptor
actionInterceptor.pattern = /**/**/**/**
actionInterceptor.excludepattern = 
actionInterceptor.swaggerpath = /swagger.json

spring.profiles.active= pub
spring.mvc.throw-exception-if-no-handler-found= false
spring.resources.add-mappings= true
spring.devtools.livereload.enabled=true
spring.mvc.static-path-pattern=/**
#\u8bbe\u7f6e\u9759\u6001\u8d44\u6e90\u7684\u8bf7\u6c42\u8def\u5f84
spring.resources.static-locations=classpath:/static/,classpath:/public/,/
#\u6307\u5b9a\u9759\u6001\u8d44\u6e90\u7684\u8def\u5f84
#database
spring.datasource.dbhead=light
spring.datasource.name = ${DB_NAME}
spring.datasource.url = jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useUnicode=true&allowMultiQueries=true&characterEncoding=utf-8
#spring.datasource.url = jdbc:oracle:thin:@${DB_HOST}:${DB_PORT}:${DB_NAME}
spring.datasource.username = ${DB_USER}
spring.datasource.password = ${DB_PASSWORD}
spring.datasource.driver-class-name = com.mysql.jdbc.Driver
#spring.datasource.driver-class-name =oracle.jdbc.driver.OracleDriver
spring.datasource.tomcat.remove-abandoned=true
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.filters = wall,stat,log4j
spring.datasource.maxActive = 20
spring.datasource.initialSize = 5
spring.datasource.maxWait = 60000
spring.datasource.minIdle = 1
spring.datasource.timeBetweenEvictionRunsMillis = 60000
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = select 'x' from dual
spring.datasource.testWhileIdle = false
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
#poolPreparedStatements  oracle set false
spring.datasource.poolPreparedStatements = false
spring.datasource.maxOpenPreparedStatements = 20
spring.datasource.druid.manager.url=druid
spring.datasource.druid.manager.username=admin
spring.datasource.druid.manager.password=admin123
#mybatis

mybatis.typeAliasesPackage:com.robot
mybatis.mapperLocations:classpath*:com/robot/**/mapper/*.xml
mybatis.configLocation:classpath:mybatis-config.xml

#server
server.port=${SERVER_PORT}
#server.address:127.0.0.1
server.context-path=${SERVER_CONTEXTPATH}
server.tomcat.basedir=${SERVER_BASEDIR}
#redis
spring.redis.host=${REDIS_HOST}
spring.redis.password=${REDIS_PASSWORD}
spring.redis.port=${REDIS_PORT}
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.timeout=0
spring.redis.expire=1800

#kafka_servers
kafka.broker.servers=${KAFKA_SERVERS}
kafka.customer.group=group1
#kafka_topic
kafka.base.topic=test
#kafka_send(true||false)
kafka.base.issend=false
#kafka_interface
kafka.base.services=

spring.shiro.SuccessUrl=/main.jsp
spring.shiro.Loginurl=/login.jsp
spring.shiro.logoutUrls=/logout
spring.shiro.anonUrls=/js/**;/easyui/**;/images/**;/img/**;/fonts/**;/jQuery/**;/JQueryUi/**;/assets/**;/css/**;/v2/api-docs;/druid/**;/swagger/**;/login.jsp;/LightService;test.html;/system/servicecallstate.jsp
spring.shiro.authcUrls=/jsp
spring.shiro.UnauthorizedUrl=/403


########################################################
###THYMELEAF (ThymeleafAutoConfiguration)
########################################################
#spring.messages.basename=I18n/messages
#I18n Resource File Dir
spring.messages.basedir=I18n
spring.thymeleaf.prefix=classpath:templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
# ;charset=<encoding> is added
spring.thymeleaf.content-type=text/html
# set to false for hot refresh

spring.thymeleaf.cache=false
